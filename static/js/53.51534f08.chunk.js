"use strict";(self.webpackChunkaktyn_github_io=self.webpackChunkaktyn_github_io||[]).push([[53],{3521:(e,r,t)=>{t.d(r,{F:()=>h,o:()=>l});var s=t(9408);class l{constructor(){this.isPass=!0,this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}setSize(){}render(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}dispose(){}}const a=new s.qUd(-1,1,1,-1,0,1);class i extends s.LoY{constructor(){super(),this.setAttribute("position",new s.qtW([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new s.qtW([0,2,0,0,2,0],2))}}const o=new i;class h{constructor(e){this._mesh=new s.eaF(o,e)}dispose(){this._mesh.geometry.dispose()}render(e){e.render(this._mesh,a)}get material(){return this._mesh.material}set material(e){this._mesh.material=e}}},1053:(e,r,t)=>{t.r(r),t.d(r,{RenderPass:()=>a});var s=t(9408),l=t(3521);class a extends l.o{constructor(e,r){let t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;super(),this.scene=e,this.camera=r,this.overrideMaterial=t,this.clearColor=l,this.clearAlpha=a,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1,this._oldClearColor=new s.Q1f}render(e,r,t){const s=e.autoClear;let l,a;e.autoClear=!1,null!==this.overrideMaterial&&(a=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),null!==this.clearColor&&(e.getClearColor(this._oldClearColor),e.setClearColor(this.clearColor,e.getClearAlpha())),null!==this.clearAlpha&&(l=e.getClearAlpha(),e.setClearAlpha(this.clearAlpha)),1==this.clearDepth&&e.clearDepth(),e.setRenderTarget(this.renderToScreen?null:t),!0===this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),e.render(this.scene,this.camera),null!==this.clearColor&&e.setClearColor(this._oldClearColor),null!==this.clearAlpha&&e.setClearAlpha(l),null!==this.overrideMaterial&&(this.scene.overrideMaterial=a),e.autoClear=s}}}}]);
//# sourceMappingURL=53.51534f08.chunk.js.map